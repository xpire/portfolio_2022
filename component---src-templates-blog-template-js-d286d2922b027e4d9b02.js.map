{"version":3,"file":"component---src-templates-blog-template-js-d286d2922b027e4d9b02.js","mappings":"8OAcMA,EAAqBC,EAAAA,QAAAA,IAAAA,WAAH,4EAAGA,CAAH,0DAuExB,UAhEqB,SAAC,GAAc,IAAZC,EAAW,EAAXA,MACtBC,EAAAA,EAAAA,KACA,MAAuCD,EAAKE,IAAIC,YAAxCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAcC,GAA7B,EAAqBC,OAArB,EAA6BD,OACrBE,EAASR,EAAKE,IAAdM,KACFC,EAAMH,EAAMI,gBAAgBC,gBAElC,OADAC,QAAQC,IAAI,CAAER,KAAAA,IAEZ,gBAAC,KAAD,KACE,gBAAC,IAAD,CAAWS,SAAS,MAClB,gBAAC,IAAD,CAAMC,UAAWC,EAAAA,GAAYC,GAAG,KAAhC,qBAGA,sBAAIC,MAAM,cACV,gBAAC,IAAD,CAAYC,QAAQ,UAClB,4BAAOd,IAET,gBAAC,IAAD,CAAYc,QAAQ,MAAMf,GAC1B,gBAAC,IAAD,CAAYe,QAAQ,MAClB,qCAGF,gBAAC,IAAD,CACER,gBAAiBF,EACjBW,SAAUd,EAAMI,gBAAgBU,SAChCC,IAAI,cAEN,gBAACvB,EAAD,KACE,gBAAC,IAAD,KACE,gBAAC,EAAAwB,YAAD,CAAaC,WAAYC,EAAAA,GACvB,gBAAC,EAAAC,YAAD,KAAcjB,MAIpB,sBAAIU,MAAM,cAEV,sBAAIA,MAAM","sources":["webpack://koop-blog/./src/templates/blog-template.js"],"sourcesContent":["import React from \"react\"\nimport { Link as GatsbyLink, graphql } from \"gatsby\"\nimport BlurHashImage from \"../components/style/BlurHashImage\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport {\n  MDXThemeProvider,\n  MDXProviderComponents,\n} from \"../components/style/MDXComponents\"\nimport { PageThemeProvider } from \"../components/style/PageStyle\"\nimport { Typography, Link, Container } from \"@mui/material\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\nimport { defineCustomElements as deckDeckGoHighlightElement } from \"@deckdeckgo/highlight-code/dist/loader\"\nconst PostTemplateStyles = styled.div`\n  .post__body {\n    margin-top: 2.5rem;\n    margin-bottom: 2.5rem;\n  }\n`\n\nconst PostTemplate = ({ data }) => {\n  deckDeckGoHighlightElement()\n  const { title, date, author, image } = data.mdx.frontmatter\n  const { body } = data.mdx\n  const img = image.childImageSharp.gatsbyImageData\n  console.log({ date })\n  return (\n    <PageThemeProvider>\n      <Container maxWidth=\"lg\">\n        <Link component={GatsbyLink} to=\"/\">\n          Back to all posts\n        </Link>\n        <hr class=\"separator\" />\n        <Typography variant=\"button\">\n          <span>{date}</span>\n        </Typography>\n        <Typography variant=\"h1\">{title}</Typography>\n        <Typography variant=\"h3\">\n          <span>Blog</span>\n        </Typography>\n\n        <BlurHashImage\n          gatsbyImageData={img}\n          blurHash={image.childImageSharp.blurHash}\n          alt=\"Blog Post\"\n        />\n        <PostTemplateStyles>\n          <MDXThemeProvider>\n            <MDXProvider components={MDXProviderComponents}>\n              <MDXRenderer>{body}</MDXRenderer>\n            </MDXProvider>\n          </MDXThemeProvider>\n        </PostTemplateStyles>\n        <hr class=\"separator\" />\n\n        <hr class=\"separator separator__large\" />\n      </Container>\n    </PageThemeProvider>\n  )\n}\n\nexport const query = graphql`\n  query getBlog($slug: String!) {\n    mdx(slug: { eq: $slug }) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM Do, YYYY\")\n        author\n        image {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH, placeholder: NONE)\n            blurHash(componentX: 3, componentY: 4, width: 32) {\n              base64Image\n              hash\n            }\n          }\n        }\n      }\n      slug\n      body\n    }\n  }\n`\n\nexport default PostTemplate\n\nPostTemplate.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string,\n  author: PropTypes.string,\n  image: PropTypes.object,\n}\n"],"names":["PostTemplateStyles","styled","data","deckDeckGoHighlightElement","mdx","frontmatter","title","date","image","author","body","img","childImageSharp","gatsbyImageData","console","log","maxWidth","component","GatsbyLink","to","class","variant","blurHash","alt","MDXProvider","components","MDXProviderComponents","MDXRenderer"],"sourceRoot":""}